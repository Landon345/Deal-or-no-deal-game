{"version":3,"sources":["Components/case.jsx","Components/cases.jsx","Classes/CaseClass.js","Components/amount.jsx","Components/amounts.jsx","Components/Info.jsx","App.js","serviceWorker.js","index.js"],"names":["Case","Fragment","style","fontSize","background","borderRadius","border","onClick","props","handleDelete","disabled","this","disable","caseNumber","Component","Cases","cases","map","x","key","id","amountEnclosed","CaseClass","casesArray","amounts","i","ranIndex","Math","floor","random","length","ranAmount","push","splice","Amount","color","textAlign","padding","margin","amount","Amounts","amountsAvailable","Info","caseNumberOfCaseJustClicked","amountOfCaseJustClicked","turn","noDeal","totalWinnings","myCase","bankOffer","getInfo","getButtons","getCaseJustClicked","ask","console","log","handleDeal","handleNoDeal","amountInCase","turnNumberHolder","firstCase","App","state","handleStart","caseList","populateCases","setState","amountsAvail","filter","c","doBankOffer","handleAsk","getBankOffer","total","toFixed","winnings","parseFloat","height","display","gridTemplateColumns","gridTemplateRows","gridGap","gridRow","gridColumn","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5395099.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Case extends Component {\n  render() {\n\n    const casestyle = {\n         fontSize: '30px',\n         background: 'white',\n         borderRadius: '5%',\n         border: '4px solid black'\n    };\n\n    return (\n      <React.Fragment>\n        <button style={casestyle} onClick={() => this.props.handleDelete(this.props)} disabled = {this.props.disable}>\n          {this.props.caseNumber}\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Case;\n","import React, { Component } from 'react';\nimport Case from './case';\n\n\nclass Cases extends Component {\n  render() {\n    const {cases, handleDelete, disable} = this.props;\n    \n    \n    \n    return (\n      <React.Fragment>\n        {cases.map(x => (\n          <Case\n            key={x.id}\n            amountEnclosed = {x.amountEnclosed}\n            caseNumber = {x.id}\n            handleDelete = {handleDelete}\n            disable = {disable}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cases;\n","export default class CaseClass {\n  constructor(id, amountEnclosed) {\n    this.id = id;\n    this.amountEnclosed = amountEnclosed;\n  }\n\n  /**\n   *\n   * Discription: return an array of cases with random amounts enclosed in each.\n   * @returns a case array\n   */\n  static populateCases() {\n    let casesArray = [];\n\n    let amounts = [\n      0.01,\n      1,\n      5,\n      10,\n      25,\n      50,\n      75,\n      100,\n      200,\n      300,\n      400,\n      500,\n      750,\n      1000,\n      5000,\n      10000,\n      25000,\n      50000,\n      75000,\n      100000,\n      200000,\n      300000,\n      400000,\n      500000,\n      750000,\n      1000000\n    ];\n\n    for (var i = 0; i < 26; i++) {\n      //get a random number from the amounts array\n      \n        let ranIndex = Math.floor(Math.random() * (amounts.length));\n\n        let ranAmount = amounts[ranIndex];\n        casesArray.push(new CaseClass(i + 1, ranAmount));\n\n         //take the selected case out of the case list so there are no duplicates of amounts.\n        amounts.splice(ranIndex,1);\n      \n    }\n    return casesArray;\n  }\n\n}\n","import React, { Component } from 'react';\n\nclass Amount extends Component {\n  render() {\n    const amountsStyle = {\n        background: 'orange',\n        color: 'black',\n        borderRadius: '5%',\n        textAlign: 'center',\n        padding: '5px',\n        margin: '2px'\n        \n    };\n\n    return <p style={amountsStyle}>{this.props.amount}</p>;\n  }\n}\n\nexport default Amount;\n","import React, { Component } from 'react';\nimport Amount from './amount';\n\nclass Amounts extends Component {\n  render() {\n\n    \n\n    return (\n      <React.Fragment >\n        {this.props.amountsAvailable.map(x => (\n\n          <Amount\n            key={x}\n            amount={x}\n            \n          />\n\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Amounts;\n","import React, { Component } from 'react';\n\n\n\nclass Info extends Component {\n\n    \n    \n    render() { \n\n    const {caseNumberOfCaseJustClicked, amountOfCaseJustClicked, turn, noDeal, totalWinnings, myCase, bankOffer} = this.props;\n\n\n        return ( \n        <div>\n            <h1>directions: {this.getInfo(turn, noDeal)}</h1>\n            <div>{this.getButtons(turn, noDeal)}</div>\n    <h1>{this.getCaseJustClicked(caseNumberOfCaseJustClicked, amountOfCaseJustClicked, turn)}</h1>\n            <h1>Your Case number is: {myCase}</h1>\n            <h1>The Bank's offer is: {bankOffer}</h1>\n            <h1>Your total winnings is: ${totalWinnings}</h1>\n        </div> );\n    }\n\n    getInfo(turn, noDeal){\n        \n        if(turn === 0){\n            return 'Pick your case';\n        }else if(turn < 6 && turn > 0 && !this.ask(turn)){\n            \n            return 'Pick ' + (6 - turn) + ' more cases';\n        }else if(turn < 10 && turn >= 6 && (!this.ask(turn) || noDeal)){\n           \n            return 'Pick ' + (10 - turn) + ' more cases';\n        }else if(turn < 14 && turn >= 10 && (!this.ask(turn) || noDeal)){\n           \n            return 'Pick ' + (14 - turn) + ' more cases';\n        }else if(turn < 17 && turn >= 14 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (17 - turn) + ' more cases';\n        }else if(turn < 20 && turn >= 17 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (20 - turn) + ' more cases';\n        }else if(turn < 22 && turn >= 20 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (22 - turn) + ' more cases';\n        }else if(turn < 23 && turn >= 22 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (23 - turn) + ' more cases';\n        }else if(turn < 24 && turn >= 23 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (24 - turn) + ' more cases';\n        }else if(turn < 25 && turn >= 24 && (noDeal || !this.ask(turn))){\n            \n            return 'Pick ' + (25 - turn) + ' more cases';\n        }else{\n            \n            return 'Deal or No Deal?';\n        }\n    }\n\n\n    getButtons(turn, noDeal){\n        console.log(noDeal);\n        if(noDeal){\n            return <React.Fragment></React.Fragment>;\n        }\n        if(this.ask(turn) && turn === 26){\n            return(\n                <div>\n                <button onClick = {() => this.props.handleDeal(this.props)}>Deal</button>\n                </div>\n                );\n        }else if(this.ask(turn)){\n            return (\n            <div>\n            <button onClick = {() => this.props.handleDeal(this.props)}>Deal</button>\n            <button onClick = {() => this.props.handleNoDeal(this.props)}>No Deal</button>\n            </div>\n            );\n        }else{\n            return <React.Fragment></React.Fragment>;\n        }\n    }\n\n    ask(turn){\n        if(turn === 6 || turn === 10 || turn === 14 || turn === 17 || turn === 20 \n            || turn === 22 || turn === 23 || turn ===24 || turn === 25 || turn === 26){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    getCaseJustClicked(caseNumber, amountInCase, turn){\n        if(turn === 1){\n            return (<div>\n                You can not know what is in your case.\n            </div>);\n        }else if(turn === 0){\n            return <React.Fragment></React.Fragment>;\n        }else{\n            return (<div>\n                Amount in case {caseNumber} is {amountInCase}.\n            </div>);\n        }\n        \n    }\n}\n \nexport default Info;","import React, { Component } from 'react';\nimport './App.css';\nimport Cases from './Components/cases';\nimport CaseClass from './Classes/CaseClass';\nimport Amounts from './Components/amounts';\nimport Info from './Components/Info';\n\nlet turnNumberHolder = 0;\nlet firstCase = null;\nlet totalWinnings = 0;\n\nclass App extends Component {\n  state = {\n    cases: [],\n    amountsAvailable: [],\n    noDeal: false,\n    ask: false,\n    bankOffer: 0,\n    totalWinnings: 0,\n    amountOfCaseJustClicked: 0,\n    caseNumberOfCaseJustClicked: 0\n  };\n\n  handleStart = () => {\n    const caseList = CaseClass.populateCases();\n    turnNumberHolder = 0;\n    firstCase = null;\n    this.setState({\n      cases: caseList,\n      amountsAvailable: [\n        0.01,\n        1,\n        5,\n        10,\n        25,\n        50,\n        75,\n        100,\n        200,\n        300,\n        400,\n        500,\n        750,\n        1000,\n        5000,\n        10000,\n        25000,\n        50000,\n        75000,\n        100000,\n        200000,\n        300000,\n        400000,\n        500000,\n        750000,\n        1000000\n      ],\n      noDeal: false,\n      ask: false,\n      bankOffer: 0,\n      amountOfCaseJustClicked: 0,\n      caseNumberOfCaseJustClicked: 0,\n    });\n  };\n\n  handleDelete = x => {\n\n    \n    let amountsAvail;\n    if (turnNumberHolder === 0) {\n      amountsAvail = this.state.amountsAvailable;\n      firstCase = x.caseNumber;\n    }else{\n      amountsAvail = this.state.amountsAvailable.filter(\n        c => c !== x.amountEnclosed\n      );\n      \n    }\n    const cases = this.state.cases.filter(c => c.id !== x.caseNumber);\n    \n    console.log(amountsAvail);\n    this.setState({\n      cases,\n      amountsAvailable: amountsAvail,\n      amountOfCaseJustClicked: x.amountEnclosed,\n      caseNumberOfCaseJustClicked: x.caseNumber\n    });\n    \n\n    \n    this.doBankOffer(amountsAvail);\n\n    \n  };\n  doBankOffer = x => {\n    let bankOffer;\n    \n    turnNumberHolder++;\n    if (\n      turnNumberHolder === 6 ||\n      turnNumberHolder === 10 ||\n      turnNumberHolder === 14 ||\n      turnNumberHolder === 17 ||\n      turnNumberHolder === 20 ||\n      turnNumberHolder === 22 ||\n      turnNumberHolder === 23 ||\n      turnNumberHolder === 24 ||\n      turnNumberHolder === 25 ||\n      turnNumberHolder === 26\n    ) {\n      this.handleAsk();\n      bankOffer = this.getBankOffer(x);\n    }\n    \n    \n\n    this.setState({\n      noDeal: false,\n      bankOffer\n    });\n  }\n\n  \n\n  handleNoDeal = () => {\n    this.handleAsk();\n    this.setState({\n      noDeal: true\n    });\n  };\n\n  getBankOffer = (x) => {\n    let total = 0;\n    let average = 0;\n    console.log(x);\n    for (let i = 0; i < x.length; i++) {\n      total += x[i];\n    }\n\n    average = total / x.length;\n    return average.toFixed(0);\n  };\n\n  handleDeal = () => {\n    const winnings = this.state.bankOffer;\n    totalWinnings += parseFloat( winnings);\n    this.setState({\n      totalWinnings\n    });\n    this.handleStart();\n  };\n\n  handleAsk = () => {\n    const ask = this.state.ask ? false : true;\n    this.setState({\n      ask\n    });\n  };\n\n  render() {\n    const container = {\n      //height: '750px',\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gridTemplateRows: '1fr 1fr',\n      gridGap: '10px'\n    };\n\n    const header = {\n      textAlign: 'center',\n      background: 'rgb(200, 140, 150)',\n      color: 'white',\n      height: '20px'\n    };\n\n    const casesContainer = {\n      background: 'lightBlue',\n      display: 'grid',\n      gridColumn: '2/4',\n      gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr 1fr',\n      gridTemplateRows: '1fr 1fr 1fr 1fr',\n      gridGap: '30px',\n      padding: '15px'\n    };\n\n    const amountsContainer = {\n      background: 'gray',\n      display: 'grid',\n      gridRow: '1/3',\n      gridTemplateColumns: '1fr 1fr',\n      gridTemplateRows: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr',\n      gridGap: '0px'\n    };\n\n    const infoContainer = {\n      gridColumn: '2/4'\n    };\n\n    return (\n      <React.Fragment>\n        <header style={header}>\n          <button onClick={this.handleStart}>Start New Game</button>\n        </header>\n\n        <section style={container}>\n          <div style={amountsContainer}>\n            <Amounts\n              cases={this.state.cases}\n              amountsAvailable={this.state.amountsAvailable}\n            />\n          </div>\n\n          <div style={casesContainer}>\n            <Cases\n              cases={this.state.cases}\n              handleDelete={this.handleDelete}\n              disable={this.state.ask}\n            />\n          </div>\n\n          <div style={infoContainer}>\n            <Info\n              turn={turnNumberHolder}\n              myCase={firstCase}\n              handleNoDeal={this.handleNoDeal}\n              noDeal={this.state.noDeal}\n              bankOffer = {this.state.bankOffer}\n              handleAsk={this.handleAsk}\n              amountsAvailable={this.state.amountsAvailable}\n              handleDeal={this.handleDeal}\n              totalWinnings={this.state.totalWinnings}\n              amountOfCaseJustClicked = {this.state.amountOfCaseJustClicked}\n              caseNumberOfCaseJustClicked = {this.state.caseNumberOfCaseJustClicked}\n            />\n          </div>\n        </section>\n        <footer style={{background: 'rgb(50,50,50)', color: 'white'}}>Copyright 2019</footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}